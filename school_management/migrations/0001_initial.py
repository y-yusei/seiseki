# Generated by Django 5.2.5 on 2025-08-24 15:25

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('full_name', models.CharField(max_length=100, verbose_name='氏名')),
                ('role', models.CharField(choices=[('admin', '管理者'), ('teacher', '教員'), ('student', '学生')], default='student', max_length=10, verbose_name='役割')),
                ('student_number', models.CharField(blank=True, max_length=20, verbose_name='学籍番号')),
                ('teacher_id', models.CharField(blank=True, max_length=20, verbose_name='教員ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_set', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'ユーザー',
                'verbose_name_plural': 'ユーザー',
            },
        ),
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=100, verbose_name='クラス名')),
                ('year', models.IntegerField(verbose_name='年度')),
                ('semester', models.CharField(choices=[('first', '前期'), ('second', '後期')], max_length=10, verbose_name='学期')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('students', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='学生')),
                ('teachers', models.ManyToManyField(related_name='classrooms', to=settings.AUTH_USER_MODEL, verbose_name='担当教員')),
            ],
            options={
                'verbose_name': 'クラス',
                'verbose_name_plural': 'クラス',
            },
        ),
        migrations.CreateModel(
            name='LessonSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_number', models.IntegerField(verbose_name='回数')),
                ('date', models.DateField(verbose_name='実施日')),
                ('topic', models.CharField(blank=True, max_length=200, verbose_name='テーマ・内容')),
                ('has_quiz', models.BooleanField(default=False, verbose_name='小テストあり')),
                ('has_peer_evaluation', models.BooleanField(default=False, verbose_name='ピア評価あり')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_management.classroom', verbose_name='クラス')),
            ],
            options={
                'verbose_name': '授業回',
                'verbose_name_plural': '授業回',
                'unique_together': {('classroom', 'session_number')},
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_number', models.IntegerField(verbose_name='グループ番号')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lesson_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_management.lessonsession', verbose_name='授業回')),
            ],
            options={
                'verbose_name': 'グループ',
                'verbose_name_plural': 'グループ',
                'unique_together': {('lesson_session', 'group_number')},
            },
        ),
        migrations.CreateModel(
            name='PeerEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluator_token', models.UUIDField(verbose_name='評価者トークン（匿名化）')),
                ('first_place_reason', models.TextField(blank=True, verbose_name='1位選択理由')),
                ('second_place_reason', models.TextField(blank=True, verbose_name='2位選択理由')),
                ('class_comment', models.TextField(blank=True, verbose_name='授業コメント')),
                ('general_comment', models.TextField(blank=True, verbose_name='全般コメント')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='評価日時')),
                ('evaluator_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='peer_evaluations_as_evaluator', to='school_management.group', verbose_name='評価者グループ')),
                ('first_place_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_place_votes', to='school_management.group', verbose_name='1位グループ')),
                ('lesson_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_management.lessonsession', verbose_name='授業回')),
                ('second_place_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_place_votes', to='school_management.group', verbose_name='2位グループ')),
            ],
            options={
                'verbose_name': 'ピア評価',
                'verbose_name_plural': 'ピア評価',
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiz_name', models.CharField(max_length=100, verbose_name='小テスト名')),
                ('max_score', models.IntegerField(verbose_name='満点')),
                ('grading_method', models.CharField(choices=[('pass_fail', '合否'), ('numeric', '数値入力'), ('rubric', 'ルーブリック'), ('qr_mobile', 'QRコード巡回採点')], default='numeric', max_length=20, verbose_name='採点方式')),
                ('quick_buttons', models.JSONField(blank=True, null=True, verbose_name='クイックボタン設定')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lesson_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_management.lessonsession', verbose_name='授業回')),
            ],
            options={
                'verbose_name': '小テスト',
                'verbose_name_plural': '小テスト',
            },
        ),
        migrations.CreateModel(
            name='QuizScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(verbose_name='得点')),
                ('is_cancelled', models.BooleanField(default=False, verbose_name='取り消し済み')),
                ('graded_at', models.DateTimeField(auto_now_add=True, verbose_name='採点日時')),
                ('graded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_scores_graded', to=settings.AUTH_USER_MODEL, verbose_name='採点者')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_management.quiz', verbose_name='小テスト')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_scores_as_student', to=settings.AUTH_USER_MODEL, verbose_name='学生')),
            ],
            options={
                'verbose_name': '小テスト結果',
                'verbose_name_plural': '小テスト結果',
            },
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, max_length=50, verbose_name='役割')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_management.group', verbose_name='グループ')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_memberships', to=settings.AUTH_USER_MODEL, verbose_name='学生')),
            ],
            options={
                'verbose_name': 'グループメンバー',
                'verbose_name_plural': 'グループメンバー',
                'unique_together': {('group', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('present', '出席'), ('absent', '欠席'), ('late', '遅刻'), ('early_leave', '早退')], default='present', max_length=20, verbose_name='出席状況')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to=settings.AUTH_USER_MODEL, verbose_name='学生')),
                ('lesson_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_management.lessonsession', verbose_name='授業回')),
            ],
            options={
                'verbose_name': '出席情報',
                'verbose_name_plural': '出席情報',
                'unique_together': {('lesson_session', 'student')},
            },
        ),
        migrations.CreateModel(
            name='ContributionEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contribution_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='貢献度スコア')),
                ('evaluatee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributioneval_evaluatee', to=settings.AUTH_USER_MODEL, verbose_name='被評価者')),
                ('peer_evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_management.peerevaluation', verbose_name='ピア評価')),
            ],
            options={
                'verbose_name': '貢献度評価',
                'verbose_name_plural': '貢献度評価',
                'unique_together': {('peer_evaluation', 'evaluatee')},
            },
        ),
    ]
